#============================================================
[ENV]
#endianType: either LITTLE_ENDIAN_DATA or BIG_ENDIAN_DATA
#x86, x64 and arm adopt LITTLE_ENDIAN_DATA
#PowerPC (PPC), MAC OS, and KEIL C51 adopt BIG_ENDIAN_DATA
dataEndianType = LITTLE_ENDIAN_DATA

#solution: SZ, .....
sol_name = SZ

[PARAMETER]
#The following parameter "offset" can be used to tune the compression ratio for hard-to-compress data
##Its value should be 1, 2, 3, 4, 5, 6, 7, 8, 9, or 10.
##Generally, we recommend offset=0. But for some data sets.
offset = 0
maxSegmentNum = 1024
#Use block-based space filling transform before compression? No (0) or Yes (1)
#spaceFillingCurveTransform is still under debugging, please always set it to 0.
spaceFillingCurveTransform = 0
reOrgBlockSize = 8

#GZIP_Mode
#four options: Z_NO_COMPRESSION, or Z_BEST_SPEED, Z_BEST_COMPRESSION, Z_DEFAULT_COMPRESSION
gzipMode = Z_BEST_COMPRESSION

#errorBoundMode: four options
#ABS_AND_REL, ABS_OR_REL, ABS, REL
errorBoundMode = ABS_AND_REL

#absolute Error Bound
#absErrBound is to limit the (de)compression errors to be within an absolute error. For example, absErrBound=0.0001 means the decompressed value must be in [V-0.0001,V+0.0001], where V is the original true value.
#absErrBound = 0.000003
#absErrBound = 0.00000000001
absErrBound = 1e-5

#relative Bound Ratio
#relErrBound is to limit the (de)compression errors by considering the global data value range size (i.e., taking into account the range size (max_value - min_value)).
#For example, suppose relBoundRatio is set to 0.01, and the data set is {100,101,102,103,104,...,110}, so the global value range size is 110-100=10, so the error bound will actually be 10*0.01=0.1, from the perspective of "relBoundRatio"
relBoundRatio = 1E-6
